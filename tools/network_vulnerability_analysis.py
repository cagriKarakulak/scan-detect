import scapy.all as scapy
import socket
import requests
from requests.auth import HTTPBasicAuth
import xml.etree.ElementTree as ET
from urllib.parse import urlparse
import nmap

# Ağdaki cihazları tarama fonksiyonu
def ağ_tarama(ip_aralığı):
    arp_istek = scapy.ARP(pdst=ip_aralığı)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_istek_broadcast = broadcast/arp_istek
    cevap = scapy.srp(arp_istek_broadcast, timeout=1, verbose=False)[0]
    
    cihazlar = []
    for element in cevap:
        cihaz_ip = element[1].psrc
        cihaz_mac = element[1].hwsrc
        cihazlar.append({"ip": cihaz_ip, "mac": cihaz_mac})
    
    return cihazlar

# Açık portları tarama fonksiyonu
def port_tarama(ip):
    açık_portlar = []
    for port in range(1, 1025):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        sonuç = sock.connect_ex((ip, port))
        if sonuç == 0:
            açık_portlar.append(port)
        sock.close()
    
    return açık_portlar

# Hizmetleri tarama fonksiyonu
def hizmet_tarama(ip, port):
    nm = nmap.PortScanner()
    nm.scan(ip, str(port))
    hizmet = nm[ip]['tcp'][port]['name']
    return hizmet

# Zafiyetleri kontrol etme fonksiyonu
def zafiyet_kontrol(ip, port, hizmet):
    if hizmet == "http":
        url = f"http://{ip}:{port}/"
        try:
            response = requests.get(url, auth=HTTPBasicAuth('admin', 'admin'))
            if response.status_code == 200:
                print(f"{ip} cihazında {port} portunda zafiyet bulundu.")
        except requests.exceptions.RequestException as e:
            print(f"{ip} cihazında {port} portunda zafiyet bulunamadı.")
    
    elif hizmet == "ftp":
        try:
            ftp = ftplib.FTP()
            ftp.connect(ip, port)
            ftp.login(user='anonymous', passwd='anonymous')
            print(f"{ip} cihazında {port} portunda zafiyet bulundu.")
        except ftplib.error_perm as e:
            print(f"{ip} cihazında {port} portunda zafiyet bulunamadı.")

# Ana fonksiyon
def main():
    ip_aralığı = input("Ağ aralığı girin (örneğin 192.168.1.0/24): ")
    cihazlar = ağ_tarama(ip_aralığı)
    
    for cihaz in cihazlar:
        print(f"\n{cihaz['ip']} cihazında tarama yapılıyor...")
        açık_portlar = port_tarama(cihaz['ip'])
        for port in açık_portlar:
            hizmet = hizmet_tarama(cihaz['ip'], port)
            print(f"{cihaz['ip']} cihazında {port} portunda {hizmet} hizmeti çalışıyor.")
            zafiyet_kontrol(cihaz['ip'], port, hizmet)

if __name__ == "__main__":
    main()